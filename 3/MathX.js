export class MathX{
  constructor(){
    this._memo = {}; // Создаем объект `memo`, который будет служить для кэширования результатов вычислений
    this._sequence = []; // Создать пустой массив для хранения последовательности чисел Фибоначчи.
  }
  
  // Функция для вычисления N-го числа в ряду Фибоначчи
  fibonacci(num) {
    if (num <= 0) return 0;
    if (num === 1) return 1;

    if (this._memo[num]) { // Если результат для num уже был вычислен и сохранен в memo, вернуть его.
      return this._memo[num];
    } else { // Иначе вычислить результат и сохранить его в memo.
      this._memo[num] = this.fibonacci(num - 1) + this.fibonacci(num - 2);
      return this._memo[num];
    }
  }

  // Функция для вычисления всех чисел в ряду Фибоначчи до числа N
  fibonacciSequence(num) {
    for (let i = 0; i <= num; i++) { // Пройти циклом от 0 до num.
      this._sequence.push(this.fibonacci(i)); // Вычислить и добавить каждое число Фибоначчи в массив.
    }
    return this._sequence; // Вернуть массив с последовательностью чисел Фибоначчи.
  }

  // Функция для проверки, является ли число простым
  _isPrime(num) {
    if (num <= 1) return false; // Если число меньше или равно 1, оно не является простым.
    if (num <= 3) return true; // Если число меньше или равно 3, оно является простым.

    if (num % 2 === 0 || num % 3 === 0) return false; // Если число делится на 2 или 3 без остатка, оно не является простым.

    for (let i = 5; i * i <= num; i += 6) { // Проверка делителей от 5 до квадратного корня из числа.
      if (num % i === 0 || num % (i + 2) === 0) return false; // Если число делится на i или i+2 без остатка, оно не является простым.
    }

    return true; // Если ни один из условий не выполнился, число является простым.
  }

  // Функция для вычисления всех простых чисел до числа N
  primeNumbers(num) {
    const primes = []; // Создать пустой массив для хранения простых чисел.
    for (let i = 2; i <= num; i++) { // Пройти циклом от 2 до num.
      if (this._isPrime(i)) { // Если число `i` простое, добавить его в массив.
        primes.push(i);
      }
    }
    return primes; // Вернуть массив с простыми числами.
  }
}